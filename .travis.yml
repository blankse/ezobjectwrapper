# A Travis configuration file for a bundle which aims to be compatible with both eZPublish 5 and eZPlatform

language: php

sudo: required

matrix:
  include:
    #- php: 5.4
    #  env: EZ_PACKAGES='ezsystems/ezpublish-community:~2014.3.2?' EZ_VERSION=ezpublish-community
    - php: 5.5
      env: EZ_PACKAGES='ezsystems/ezpublish-community:~2014.11.0 ezsystems/behatbundle:~5.4' EZ_VERSION=ezpublish-community EZ_APP_DIR=ezpublish
    - php: 5.6
      env: EZ_PACKAGES='ezsystems/ezplatform:~1.4.0 ezsystems/behatbundle:~6.3' EZ_VERSION=ezplatform EZ_APP_DIR=app
    #- php:7.0
    #  env: EZ_PACKAGES='ezsystems/ezplatform:~0.11?' EZ_VERSION=ezplatform

before_install:
  # No need for a web server, until we start testing using Behat
  #- sudo apt-get update
  #- sudo apt-get install -q -y --force-yes apache2 libapache2-mod-fastcgi
  - mysql -uroot -e "CREATE DATABASE IF NOT EXISTS behattestdb; GRANT ALL ON behattestdb.* TO ezp@localhost IDENTIFIED BY 'ezp';"

install:
  # Latest version of composer breaks downloading eZ, so we can not run self-update. See https://github.com/composer/composer/issues/4582
  #- composer self-update

  # Increase php memory limit (need to do this now or we risk composer failing)
  - phpenv config-add WrapperBundle/Tests/travis/zzz_php.ini

  # Q: are all of these scripts ok here, or shall they be moved to the before_script step, when we add matrix combinations ???

  # Disable xdebug for speed, unless we need it for code coverage generation.
  # NB: this should NOT be done for hhvm and php 7.0.
  - if [ "$TRAVIS_PHP_VERSION" != "hhvm" -a "$TRAVIS_PHP_VERSION" != "7.0" -a "$TRAVIS_PHP_VERSION" != "5.6" ]; then phpenv config-rm xdebug.ini; fi

  # We do not rely on the requirements set in composer.json, but install a different eZ version depending on the test matrix
  # For the moment, to install eZPlatform, a set of DEV packages have to be allowed; really ugly sed expression to alter composer.json follows
  - 'if [ "$EZ_VERSION" = "ezplatform" ]; then sed -i ''s/"license": "GPL-2.0",/"license": "GPL-2.0", "minimum-stability": "dev", "prefer-stable": true,/'' composer.json; fi'
  - composer require --prefer-source --dev ${EZ_PACKAGES}
  # Q: is this needed at all ???
  - composer update

before_script:
  # Set up configuration files
  - cp vendor/ezsystems/${EZ_VERSION}/${EZ_APP_DIR}/config/parameters.yml.dist vendor/ezsystems/${EZ_VERSION}/${EZ_APP_DIR}/config/parameters.yml
  - cat WrapperBundle/Tests/ezpublish/config/config_behat_${EZ_VERSION}.yml >> vendor/ezsystems/${EZ_VERSION}/${EZ_APP_DIR}/config/config_behat.yml
  - sed -i 's/$bundles = array(/$bundles = array(new Kaliop\\eZObjectWrapperBundle\\KaliopeZObjectWrapperBundle(),/' vendor/ezsystems/${EZ_VERSION}/${EZ_APP_DIR}/EzPublishKernel.php
  - if [ "$EZ_VERSION" = "ezplatform" ]; then sed -i 's/"vendor\/ezsystems\/ezpublish-community\/ezpublish"/"vendor\/ezsystems\/ezplatform\/app"/' phpunit.xml; fi

  # TODO we have to fix the autoloader for these to work... but are they needed at all?
  #- php vendor/ezsystems/ezpublish-community/ezpublish/console --env=behat assetic:dump
  #- php vendor/ezsystems/ezpublish-community/ezpublish/console --env=behat cache:clear --no-debug

  # Create the database from sql files present in either the legacy stack or kernel
  - if [ "$EZ_VERSION" = "ezpublish-community" ]; then mysql -uroot behattestdb < vendor/ezsystems/ezpublish-legacy/kernel/sql/mysql/kernel_schema.sql; fi
  - if [ "$EZ_VERSION" = "ezpublish-community" ]; then mysql -uroot behattestdb < vendor/ezsystems/ezpublish-legacy/kernel/sql/common/cleandata.sql; fi
  - if [ "$EZ_VERSION" = "ezplatform" ]; then mysql -uroot behattestdb < vendor/ezsystems/ezpublish-kernel/data/mysql/schema.sql; fi
  - if [ "$EZ_VERSION" = "ezplatform" ]; then mysql -uroot behattestdb < vendor/ezsystems/ezpublish-kernel/data/cleandata.sql; fi

  # TODO For eZPlatform, do we need to set up SOLR as well ?
  #- if [ "$EZ_VERSION" = "ezplatform" ]; then ./vendor/ezsystems/ezplatform-solr-search-engine:bin/.travis/init_solr.sh; fi

script:
  # Finally! :-D
  - phpunit --colors --coverage-clover=coverage.clover WrapperBundle/Tests/phpunit

after_failure:
  # Display as much info as we can to help developers
  - if [ "$TRAVIS_PHP_VERSION" != "hhvm" ]; then php -i; fi

after_script:
  # Upload code-coverage to Scrutinizer
  - if [ "$TRAVIS_PHP_VERSION" = "5.6" -a -f coverage.clover ]; then wget https://scrutinizer-ci.com/ocular.phar; fi
  - if [ "$TRAVIS_PHP_VERSION" = "5.6" -a -f coverage.clover ]; then php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi
  # Upload code-coverage to CodeClimate. NB: this works only when the CODECLIMATE_REPO_TOKEN env var has been set (we do it in the Travis config via the GUI)
  - if [ "$TRAVIS_PHP_VERSION" = "5.6" -a -f coverage.clover ]; then ./vendor/bin/test-reporter --coverage-report=coverage.clover; fi

# reduce depth (history) of git checkout
git:
    depth: 30

cache:
    directories:
        - $COMPOSER_CACHE_DIR
